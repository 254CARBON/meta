#
# GitHub Actions workflow: Ingest Service Manifests
# Purpose: Collects service-manifest.yaml files from source repositories on schedule or demand.
# Triggers: scheduled, manual dispatch, and targeted pushes for testing.
#
name: Ingest Service Manifests

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      repo_filter:
        description: 'Repository name filter pattern (optional)'
        required: false
        type: string
      dry_run:
        description: 'Run in dry-run mode (no file changes)'
        required: false
        default: false
        type: boolean

  # Scheduled runs (daily at 2 AM UTC)
  schedule:
    - cron: '0 2 * * *'

  # Trigger on pushes to main branch (for testing)
  push:
    branches: [ main ]
    paths: [ 'scripts/collect_manifests.py', 'requirements.txt' ]

jobs:
  collect-manifests:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Collect manifests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ORG: ${{ github.repository_owner }}
      run: |
        if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
          DRY_RUN_FLAG="--dry-run"
        else
          DRY_RUN_FLAG=""
        fi

        if [ -n "${{ github.event.inputs.repo_filter }}" ]; then
          REPO_FILTER="--repo-filter ${{ github.event.inputs.repo_filter }}"
        else
          REPO_FILTER=""
        fi

        python scripts/collect_manifests.py $DRY_RUN_FLAG $REPO_FILTER

    - name: Upload manifests
      if: github.event.inputs.dry_run != 'true'
      uses: actions/upload-artifact@v3
      with:
        name: service-manifests-${{ github.run_id }}
        path: manifests/collected/
        retention-days: 30

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: collection-logs-${{ github.run_id }}
        path: |
          manifests/collection.log
          catalog/build.log
        retention-days: 7

    - name: Comment PR (if triggered by PR)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Service manifests have been collected and validated.'
          })
