#
# GitHub Actions workflow: Validate Service Catalog
# Purpose: Performs schema and consistency validation on catalog changes in PRs and main.
# Triggers: push to catalog paths, PRs touching catalog/schemas or validator script, and manual.
#
name: Validate Service Catalog

on:
  # Trigger on catalog changes
  push:
    branches: [ main ]
    paths: [ 'catalog/**' ]

  # Pull request validation
  pull_request:
    branches: [ main ]
    paths: [ 'catalog/**', 'scripts/validate_catalog.py', 'schemas/**' ]

  # Manual trigger for validation only
  workflow_dispatch:
    inputs:
      catalog_file:
        description: 'Path to catalog file to validate (optional)'
        required: false
        type: string
      strict:
        description: 'Strict validation mode (fail on warnings)'
        required: false
        default: false
        type: boolean

jobs:
  validate-catalog:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run catalog validation
      run: |
        if [ "${{ github.event.inputs.strict }}" == "true" ]; then
          STRICT_FLAG="--strict"
        else
          STRICT_FLAG=""
        fi

        if [ -n "${{ github.event.inputs.catalog_file }}" ]; then
          CATALOG_FLAG="--catalog-file ${{ github.event.inputs.catalog_file }}"
        else
          CATALOG_FLAG=""
        fi

        python scripts/validate_catalog.py $CATALOG_FLAG $STRICT_FLAG --report

    - name: Generate validation report
      if: always()
      run: |
        python scripts/validate_catalog.py --report > validation-report.json

    - name: Upload validation report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: validation-report-${{ github.run_id }}
        path: validation-report.json
        retention-days: 30

    - name: Comment PR with validation results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          let fs = require('fs');
          let report = JSON.parse(fs.readFileSync('validation-report.json'));

          const total = Object.keys(report.validations).length;
          const passed = Object.values(report.validations).filter(v => v === true).length;

          let body = `## üîç Catalog Validation Report\n\n`;
          body += `**Overall Status:** ${report.overall ? '‚úÖ Passed' : '‚ùå Failed'}\n`;
          body += `**Score:** ${passed}/${total} validations passed\n\n`;

          body += `### Validation Details\n`;
          for (const [name, result] of Object.entries(report.validations)) {
            body += `- ${result ? '‚úÖ' : '‚ùå'} ${name}\n`;
          }

          if (report.total_services) {
            body += `\n**Services:** ${report.total_services} services validated\n`;
          }

          body += `\n*Generated by GitHub Actions*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

    - name: Fail on validation errors (PR check)
      if: github.event_name == 'pull_request' && !report.overall
      run: |
        echo "Catalog validation failed. Please fix the issues before merging."
        exit 1
